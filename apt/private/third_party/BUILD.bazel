load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

compile_pip_requirements(
    name = "requirements",
    extra_args = ["--allow-unsafe"],
    requirements_in = "requirements.in",
    requirements_txt = "requirements.txt",
)

write_file(
    name = "vendor_requirements_sh",
    out = "vendor_requirements.sh",
    content = [
        # This depends on bash, would need tweaks for Windows
        "#!/usr/bin/env bash",
        # Bazel gives us a way to access the source folder!
        "IN=external/rules_apt_pypi_deps/requirements.bzl",
        "OUT=$BUILD_WORKSPACE_DIRECTORY/apt/private/third_party/requirements.bzl",
        "cp -fv $IN $OUT",
    ],
)

sh_binary(
    name = "vendor_requirements",
    srcs = ["vendor_requirements.sh"],
    data = ["@rules_apt_pypi_deps//:requirements.bzl"],
)

# Similarly ensures that the requirements.bzl file is updated
# based on the requirements.txt lockfile.
diff_test(
    name = "test_vendored",
    failure_message = "Please run:  bazel run //:vendor_requirements",
    file1 = "requirements.bzl",
    file2 = "@rules_apt_pypi_deps//:requirements.bzl",
)
